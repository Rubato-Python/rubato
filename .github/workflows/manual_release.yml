name: Manually Publish to PyPi

on:
    workflow_dispatch:
        inputs:
            versionNumber:
                required: true
                type: string
                description: Version Number (ex. 1.2.3.dev4)

jobs:
    builder:
        name: Build ${{ matrix.os }} (Python ${{ matrix.python-version }})
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.10"]
                os: ["windows-latest", "macos-latest", "ubuntu-latest"]

        steps:
            - name: Report Version
              run: |
                  export RUBATO_VERSION=${{ inputs.versionNumber }}
                  echo 'Releasing $RUBATO_VERSION'
              shell: bash

            - uses: actions/checkout@v3
              with:
                  persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
                  fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install requirements
              run: |
                  python -m pip install --upgrade pip
                  pip install build Cython~=3.0.0a11

            - name: Non Linux Build
              if: ${{ !startsWith(matrix.os, 'ubuntu') }}
              run: |
                  RUBATO_VERSION=${{ inputs.versionNumber }} python -m build -w
                  RUBATO_VERSION=${{ inputs.versionNumber }} python -m setup sdist --formats zip
              shell: bash

            - name: Linux Build
              if: ${{ startsWith(matrix.os, 'ubuntu') }}
              uses: RalfG/python-wheels-manylinux-build@v0.5.0-manylinux_2_28_x86_64
              with:
                  python-versions: "cp310-cp310"
                  build-requirements: "Cython~=3.0.0a11"

            - name: Purge Bad Wheels
              run: |
                  rm -rf dist/*linux_x86_64*.whl
              shell: bash

            - name: Upload Wheel as Artifact
              uses: actions/upload-artifact@v3
              with:
                  name: ${{matrix.os}}-wheel
                  path: dist/*.whl

            - name: Upload Tar.Gz as Artifact
              if: startsWith(matrix.os, 'ubuntu')
              uses: actions/upload-artifact@v3
              with:
                  name: zip
                  path: dist/*.zip

    releaser:
        name: Release ${{inputs.versionNumber}}
        runs-on: ubuntu-latest
        needs: builder
        steps:
            - uses: actions/download-artifact@v3

            - name: Move Files to dist
              run: |
                  mkdir dist
                  cp */* dist/

            - name: Publish to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  user: __token__
                  password: ${{ secrets.PYPI_API_TOKEN }}

            - name: Upload to release
              uses: AButler/upload-release-assets@v2.0
              with:
                  files: "dist/*"
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
                  release-tag: ${{ inputs.versionNumber }}
